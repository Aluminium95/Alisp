# TODO

## ARCHITECTURE

### Évaluation partielle

Il faut mettre en place un système d'évaluation partielle
avant la réelle exécution du programme par l'exécuteur.
Cette première « passe » permettrait de faire un certain 
nombre d'optimisations sur le code généré. 

-> Idée : c'est le parser, celui qui passe après le tokenizer 
		  qui est le plus à même de remplir cette tâche 


-> Regarder comment traiter les TCO

-> Regarder comment étendre les macros 

-> Regarder comment ne pas dupliquer du code identique (juste mettre un pointeur)

### Gestion des erreurs 

Il faut permettre de biein gérer les erreurs dans le code
python : permetter aux gens qui écrivent des libraires externes
de gérer simplement la remontée d'exceptions ... 

### Structures 

Créer une sous partie Structures, avec des structures 
de données persistantes.

### Cellule 

Créer un dossier cellule en éclatant le fichier de 400 lignes 
actuellement utilisé en plusieurs petits fichiers.

## LIBRAIRIE STANDARD

### Itérateurs : Classe abstraite au dessus de Map/Liste/String

-> map
-> mapi
-> fold
-> foldi
-> etc ... 

### Ports : dialogues avec des fichiers / la sortie standard

-> interact
-> read
-> write
-> etc ... 
